#
# set env vars befor running vagrant
# https://docs.gitlab.com/runner/
#
# export GITLABCI_NAME=my-gitlab-runner
# export GITLABCI_URL=https://gitlab-ci.local/
# export GITLABCI_TOKEN=changeme
# export GITLABCI_EXECUTOR=docker
# export GITLABCI_TAGS=''

# reuired plugin, install it with
# vagrant plugin install vagrant-reload
Vagrant.has_plugin?('vagrant-reload')


V_CPU = 2 # in cores
V_MEM = 1024 # in megabytes per core
V_MEM_TOTAL = V_MEM * V_CPU
SYNC_TYPE = "rsync" # how to sync files in vagrant, for lxc rsync is suggested

Vagrant.configure(2) do |config|
  # because sometimes vagrant key insertion in boxes is broken, we skip step of updating insecure keys
  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provider :libvirt do |libvirt, override|
    override.vm.box = "generic/ubuntu2004"
    # this is vagrant, vm is disposable, so set up supper agressive disk access
    libvirt.cpu_mode = 'host-passthrough'
    libvirt.cpus = V_CPU
    libvirt.memory = V_MEM_TOTAL
    libvirt.random_hostname = true
    libvirt.video_type = 'vmvga'
    libvirt.video_vram = '16384'
    libvirt.volume_cache = 'unsafe'
  end
  
  
  config.vm.provider :virtualbox do |vbox, override|
    override.vm.box = "generic/ubuntu2004"
  end

  config.vm.define "gr-u20-d" do |v|
    # default vm overrides go here
  end

  config.vm.provision 'bootstrap',
    type: 'shell',
    path: "boot.sh"
  
  # reboot vm, required before docker install, for new kernel
  config.vm.provision :reload
    
  # config.vm.provision 'box_generic_ubuntu_fix-dns',
  #   type: 'shell',
  #   path: 'box_generic_ubuntu_fix-dns.sh'

  # reboot vm, required before docker install, for new kernel
  # config.vm.provision :reload

  config.vm.provision 'docker',
    type: 'shell',
    path: 'docker-install.sh'

  config.vm.provision 'gitlab',
    type: 'shell',
    path: 'github-runner.sh',
    env: {
      GITHUBCI_NAME: ENV['GITHUBCI_NAME'],
      GITHUBCI_URL: ENV['GITHUBCI_URL'],
      GITHUBCI_TOKEN: ENV['GITHUBCI_TOKEN'],
    }

end
